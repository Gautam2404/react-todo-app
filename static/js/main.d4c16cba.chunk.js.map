{"version":3,"sources":["components/Todos.js","App.js","index.js"],"names":["Todos","useState","todoText","setTodoText","id","text","isCompleted","todos","setTodos","className","type","placeholder","value","onChange","e","target","changeTodoText","onClick","newTodo","uuidv4","map","todo","key","checked","updatedTodos","completTodo","filter","console","log","deleteTodo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAqGgBA,EAhGF,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTC,EADS,KACCC,EADD,OAESF,mBAAS,CAC9B,CACIG,GAAK,GACLC,KAAO,iBACPC,aAAa,GAEjB,CACIF,GAAK,GACLC,KAAO,UACPC,aAAa,GAEjB,CACIF,GAAK,GACLC,KAAO,SACPC,aAAa,KAhBL,mBAETC,EAFS,KAEHC,EAFG,KAuDhB,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,eACf,yBAAKA,UAAU,oBACf,2BAAOC,KAAK,OACXD,UAAU,eACXE,YAAY,cACZC,MAAOV,EACPW,SAAU,SAACC,GAAD,OA1CK,SAACA,GAEpBX,EAAYW,EAAEC,OAAOH,OAwCAI,CAAeF,MAGhC,yBAAKL,UAAU,sBACZ,4BAAQA,UAAU,kBAAkBQ,QAxC/B,WAEZ,IAAMC,EAAU,CACZd,GAAKe,cACLd,KAAMH,EACNI,aAAa,GAEjBE,EAAS,CAACU,GAAF,mBAAcX,KACtBJ,EAAY,MAgCL,eAGH,wBAAIM,UAAU,+BAENF,EAAMa,KAAI,SAAAC,GACN,OAEI,wBAAIZ,UAAU,iDAAiDa,IAAKD,EAAKjB,IACrE,6BACA,2BAAOM,KAAK,WAAWa,QAASF,EAAKf,YAAaO,SAAU,kBAvCpE,SAAAT,GAChB,IAAIoB,EAAejB,EAAMa,KAAI,SAAAC,GACzB,OAAGA,EAAKjB,KAAOA,GACXiB,EAAKf,aAAc,EACZe,GAEJA,KAGXb,EAASgB,GA8BiFC,CAAYJ,EAAKjB,OACnF,0BAAMK,UAAWY,EAAKf,YAAL,YAAgC,MAChDe,EAAKhB,OAIV,uBAAGI,UAAU,mBAAmBQ,QAAS,kBAlC/C,SAAAb,GACf,IAAMoB,EAAejB,EAAMmB,QAAO,SAAAL,GAAI,OAAIA,EAAKjB,KAAOA,KACtDI,EAASgB,GACTG,QAAQC,IAAIJ,GA+BwDK,CAAWR,EAAKjB,eC1E5E0B,EAVH,WACV,OACE,yBAAKrB,UAAU,iCACb,yBAAKA,UAAU,2DACb,kBAAC,EAAD,SCFRsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d4c16cba.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n// import uuidv4 from \"uuid/\";\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Todos = () => {\n    const [todoText, setTodoText] = useState(\"\");\n    const [todos,setTodos] = useState([\n        {\n            id : 50,\n            text : \"drinking water\",\n            isCompleted: false,\n        },\n        {\n            id : 51,\n            text : \"eating \",\n            isCompleted: false,\n        },\n        {\n            id : 53,\n            text : \"coding\",\n            isCompleted: true,\n        }\n\n    ]);\n\n    const changeTodoText = (e) => {\n        // set todo text id: uuidv4(), \n        setTodoText(e.target.value);\n    \n    };\n\n    const AddTodo = () => {\n\n        const newTodo = {\n            id : uuidv4(),\n            text: todoText,\n            isCompleted: false\n        };\n        setTodos([newTodo, ...todos]);\n        setTodoText(\"\");\n    }\n\n    const completTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if(todo.id === id){\n                todo.isCompleted = true;\n                return todo;\n            }\n            return todo;\n        });\n        // console.log(updatedTodos)\n        setTodos(updatedTodos)\n    };\n   const deleteTodo = id => {\n       const updatedTodos = todos.filter(todo => todo.id !== id)\n       setTodos(updatedTodos)\n       console.log(updatedTodos);\n \n    }\n    return (        \n        <div className=\"card shadow\">\n            <div className=\"card-header\">\n            <div className=\"input-group mb-3\">\n            <input type=\"text\"\n             className=\"form-control\" \n            placeholder=\"Enter To Do\" \n            value={todoText}\n            onChange={(e) => changeTodoText(e)}\n        \n            />\n            <div className=\"input-group-append\">\n               <button className=\"btn btn-primary\" onClick={AddTodo}>Add To Do</button>\n            </div>\n            </div>\n            <ul className=\"list-group list-group-flush\">\n                {\n                    todos.map(todo => {\n                        return (\n                            \n                            <li className=\"list-group-item d-flex justify-content-between\" key={todo.id}>\n                                <div>\n                                <input type=\"checkbox\" checked={todo.isCompleted} onChange={() => completTodo(todo.id)}/>\n                                <span className={todo.isCompleted ? `completed`: null}>\n                                {todo.text}\n                                </span>\n                                \n                                </div>\n                            <i className=\"far fa-trash-alt\" onClick={() => deleteTodo(todo.id)}></i>\n                                                                    \n                            </li>\n                                                       \n                        )\n                    })\n                }\n            </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default  Todos;","import React from 'react';\nimport './App.css';\nimport Todos from \"./components/Todos\";\n\nconst App = () => {\n  return (\n    <div className=\"container-fluid vw-100 vh-100\">\n      <div className=\"d-flex justify-content-center align-items-center vh-100\">\n        <Todos />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}